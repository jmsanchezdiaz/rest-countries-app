{"version":3,"sources":["darkThemeContext/DarkThemeProvider.js","colors/colors.js","customHooks/useDesctructuredContext.js","components/Navbar/Navbar.js","components/CountryDetails/CountryDetails.js","components/CountryNav/CountryNav.js","components/Loader/Loader.js","helpers/getCountryByCode.js","views/DetailPage/DetailPage.js","customHooks/useForm.js","helpers/getCountries.js","components/CountryItem/CountryItem.js","components/CountryPaginationControls/CountryPaginationControls.js","components/CountriesList/CountriesList.js","customHooks/usePagination.js","helpers/orderFunctions.js","views/Homepage/Homepage.js","router/AppRouter.js","App.js","index.js"],"names":["DarkThemeContext","createContext","DarkThemeProvider","children","useState","JSON","parse","window","localStorage","getItem","darkMode","setDarkMode","useEffect","setItem","toString","Provider","value","toggleDarkMode","prevTheme","colors","darkBlue","veryDarkBlue","veryDarkBlueLightModeText","darkGray","veryLightGray","white","black","useDesctructuredContext","useContext","Navbar","style","backgroundColor","className","color","onClick","icon","faSun","faMoon","CountryDetails","name","region","subregion","nativeName","population","capital","topLevelDomain","currencies","languages","borders","push","useHistory","map","currencie","language","join","border","CountryNav","faLongArrowAltLeft","Loader","size","speed","width","height","borderWidth","borderLeftColor","animationDuration","getCountryByCode","code","a","fetch","request","json","data","DetailPage","countryCode","useParams","country","setCountry","isMounted","useRef","current","then","response","src","flags","svg","alt","useForm","initState","formValues","setFormValues","handleChange","target","resetForm","getCountries","CountryItem","history","pathname","alpha3Code","png","CountryPaginationControls","goPrevPage","amountOfPages","goNextPage","pageNumber","CountriesList","countries","maxElements","curIndex","nxtIndex","pageState","setPageState","filtered","setFiltered","Math","ceil","length","amountOfElements","resetPagination","scroll","slice","usePagination","orderCountriesByName","filter","countryElm","toLowerCase","includes","orderCountriesByRegion","Homepage","allCountries","setAllCountries","setCountries","continents","filterCountriesByInputs","filteredCountries","targetRegion","targetName","orderCountriesByRegionAndName","onSubmit","e","preventDefault","action","type","faMagnifyingGlass","onChange","placeholder","id","AppRouter","exact","path","component","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a9bb578.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const DarkThemeContext = createContext();\r\n\r\nexport const DarkThemeProvider = ({ children }) => {\r\n  const [darkMode, setDarkMode] = useState(\r\n    JSON.parse(window.localStorage.getItem(\"darkModeOn\")) || false\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"darkModeOn\", darkMode.toString());\r\n  }, [darkMode]);\r\n\r\n  const toggleDarkMode = () => setDarkMode((prevTheme) => !prevTheme);\r\n\r\n  return (\r\n    <DarkThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\r\n      {children}\r\n    </DarkThemeContext.Provider>\r\n  );\r\n};\r\n","export const colors = {\r\n  darkBlue: \"hsl(209, 23%, 22%)\",\r\n\r\n  veryDarkBlue: \"hsl(207, 26%, 17%)\",\r\n\r\n  veryDarkBlueLightModeText: \"hsl(200, 15%, 8%)\",\r\n\r\n  darkGray: \"hsl(0, 0%, 52%)\",\r\n\r\n  veryLightGray: \"hsl(0, 0%, 98%)\",\r\n\r\n  white: \"hsl(0, 0%, 100%)\",\r\n\r\n  black: \"hsl(0, 0%, 0%)\",\r\n};\r\n","import { useContext } from \"react\";\r\nimport { DarkThemeContext } from \"../darkThemeContext/DarkThemeProvider\";\r\n\r\nconst useDesctructuredContext = () => {\r\n  const { darkMode, toggleDarkMode } = useContext(DarkThemeContext);\r\n  return {\r\n    darkMode,\r\n    toggleDarkMode,\r\n  };\r\n};\r\n\r\nexport { useDesctructuredContext };\r\n","import \"./Navbar.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { colors } from \"../../colors/colors\";\r\n\r\nimport { useDesctructuredContext } from \"../../customHooks/useDesctructuredContext\";\r\n\r\nconst Navbar = () => {\r\n  const { darkMode, toggleDarkMode } = useDesctructuredContext();\r\n  return (\r\n    <nav\r\n      style={{\r\n        backgroundColor: darkMode ? colors.darkBlue : colors.white,\r\n      }}\r\n      className=\"navbar\"\r\n    >\r\n      <h2\r\n        style={{\r\n          color: darkMode ? colors.white : colors.black,\r\n        }}\r\n        className=\"navbar__title\"\r\n      >\r\n        Where in the world?{\" \"}\r\n      </h2>\r\n      <button\r\n        style={{\r\n          color: darkMode ? colors.white : colors.black,\r\n        }}\r\n        onClick={toggleDarkMode}\r\n        className=\"navbar__mode\"\r\n      >\r\n        {darkMode ? (\r\n          <>\r\n            <FontAwesomeIcon icon={faSun} />\r\n            Light Mode\r\n          </>\r\n        ) : (\r\n          <>\r\n            <FontAwesomeIcon icon={faMoon} />\r\n            Dark Mode\r\n          </>\r\n        )}\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useHistory } from \"react-router\";\r\nimport \"./CountryDetails.scss\";\r\n\r\nconst CountryDetails = ({\r\n  name,\r\n  region,\r\n  subregion,\r\n  nativeName,\r\n  population,\r\n  capital,\r\n  topLevelDomain,\r\n  currencies,\r\n  languages,\r\n  borders,\r\n  darkMode,\r\n  colors,\r\n}) => {\r\n  const { push } = useHistory();\r\n  const handleBorderCountryClick = (borderCountryCode) =>\r\n    push(`/country/${borderCountryCode}`);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        color: darkMode ? colors.white : colors.black,\r\n      }}\r\n      className=\"detailpage__text\"\r\n    >\r\n      <div>\r\n        <h1>{name}</h1>\r\n        <div className=\"detailpage__row\">\r\n          <div className=\"detailpage__first-column\">\r\n            <p>\r\n              <b>Native name:</b> {nativeName}\r\n            </p>\r\n            <p>\r\n              <b>Population: </b>\r\n              {population}\r\n            </p>\r\n            <p>\r\n              <b>Region: </b>\r\n              {region}\r\n            </p>\r\n            <p>\r\n              <b>Subregion: </b> {subregion}\r\n            </p>\r\n            <p>\r\n              <b>Capital: </b> {capital}\r\n            </p>\r\n          </div>\r\n          <div className=\"detailpage__second-column\">\r\n            <p>\r\n              <b>Top Level Domain: </b> {topLevelDomain}\r\n            </p>\r\n            <p>\r\n              <b>Currencies: </b>\r\n              {currencies?.map((currencie) => currencie.name)}\r\n            </p>\r\n            <p>\r\n              <b>Languages: </b>\r\n              {languages?.map((language) => language.name).join(\", \")}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {borders && (\r\n        <p className=\"detailpage__borders\">\r\n          <b>Border Countries : </b>\r\n          {borders?.map((border) => (\r\n            <button\r\n              style={{\r\n                color: darkMode ? colors.white : colors.black,\r\n              }}\r\n              onClick={() => handleBorderCountryClick(border)}\r\n              key={border}\r\n            >\r\n              {border}\r\n            </button>\r\n          ))}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryDetails;\r\n","import { faLongArrowAltLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./CountryNav.scss\";\r\n\r\nconst CountryNav = ({ darkMode, colors }) => {\r\n  const { push } = useHistory();\r\n  const goBackToHomepage = () => push(\"/\");\r\n\r\n  return (\r\n    <nav className=\"country__navbar\">\r\n      <button\r\n        style={{\r\n          color: darkMode ? colors.white : colors.darkGray,\r\n        }}\r\n        onClick={goBackToHomepage}\r\n      >\r\n        <FontAwesomeIcon icon={faLongArrowAltLeft} />\r\n        <span>Back</span>\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default CountryNav;\r\n","import \"./Loader.scss\";\r\n\r\nconst Loader = ({\r\n  size = \"4px\",\r\n  speed = \"1s\",\r\n  width = \"36px\",\r\n  height = \"36px\",\r\n  color,\r\n}) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        borderWidth: size.toString(),\r\n        width: width.toString(),\r\n        height: height.toString(),\r\n        borderLeftColor: color,\r\n        animationDuration: speed.toString(),\r\n      }}\r\n      className=\"loader\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const getCountryByCode = async (code) => {\r\n  const request = await fetch(`https://restcountries.com/v2/alpha/${code}`);\r\n  const data = await request.json();\r\n\r\n  return data;\r\n};\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { colors } from \"../../colors/colors\";\r\nimport CountryDetails from \"../../components/CountryDetails/CountryDetails\";\r\nimport CountryNav from \"../../components/CountryNav/CountryNav\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { useDesctructuredContext } from \"../../customHooks/useDesctructuredContext\";\r\nimport { getCountryByCode } from \"../../helpers/getCountryByCode\";\r\nimport \"./DetailPage.scss\";\r\n\r\nconst DetailPage = () => {\r\n  const { darkMode } = useDesctructuredContext();\r\n  const { countryCode } = useParams();\r\n  const [country, setCountry] = useState();\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    if (isMounted.current) {\r\n      getCountryByCode(countryCode).then((response) => {\r\n        setCountry(response);\r\n      });\r\n    }\r\n    return () => (isMounted.current = false);\r\n  }, [countryCode]);\r\n\r\n  return (\r\n    <section\r\n      className=\"detailpage\"\r\n      style={{\r\n        backgroundColor: darkMode ? colors.veryDarkBlue : colors.veryLightGray,\r\n      }}\r\n    >\r\n      <CountryNav darkMode={darkMode} colors={colors} />\r\n      <div className=\"detailpage__info-container\">\r\n        {country ? (\r\n          <>\r\n            <img\r\n              className=\"detailpage__flag\"\r\n              src={country?.flags?.svg}\r\n              alt={`${country?.name}-flag`}\r\n            />\r\n            <CountryDetails {...country} darkMode={darkMode} colors={colors} />\r\n          </>\r\n        ) : (\r\n          <Loader\r\n            speed=\"1s\"\r\n            color={darkMode ? colors.white : colors.black}\r\n            width=\"20rem\"\r\n            height=\"20rem\"\r\n            size=\"1rem\"\r\n          />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n","import { useState } from \"react\";\r\n\r\nconst useForm = (initState) => {\r\n  const [formValues, setFormValues] = useState(initState);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => setFormValues(initState);\r\n\r\n  return { formValues, ...formValues, handleChange, resetForm };\r\n};\r\n\r\nexport default useForm;\r\n","export const getCountries = async () => {\r\n  const request = await fetch(\"https://restcountries.com/v2/all\");\r\n  const data = await request.json();\r\n\r\n  return data;\r\n};\r\n","import { useHistory } from \"react-router\";\r\n\r\nimport \"./CountryItem.scss\";\r\n\r\nconst CountryItem = ({ darkMode, country, colors }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div\r\n      style={{\r\n        color: darkMode ? colors.white : colors.black,\r\n        backgroundColor: darkMode ? colors.darkBlue : colors.white,\r\n      }}\r\n      onClick={() => {\r\n        history.push({\r\n          pathname: `/country/${country.alpha3Code}`,\r\n        });\r\n      }}\r\n      className=\"card\"\r\n      key={country.name}\r\n    >\r\n      <img className=\"card__image\" src={country.flags?.png} alt=\"flag\" />\r\n      <div className=\"card__text\">\r\n        <h3>{country.name}</h3>\r\n        <p>\r\n          <span>Population : </span>\r\n          {country.population}\r\n        </p>\r\n        <p>\r\n          <span>Region :</span> {country.region}\r\n        </p>\r\n        <p>\r\n          <span>Capital :</span> {country.capital}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryItem;\r\n","import \"./CountryPaginationControls.scss\";\r\n\r\nconst CountryPaginationControls = ({\r\n  darkMode,\r\n  colors,\r\n  goPrevPage,\r\n  amountOfPages,\r\n  goNextPage,\r\n  pageNumber,\r\n}) => {\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button\r\n        style={{\r\n          color: darkMode ? colors.white : colors.black,\r\n        }}\r\n        onClick={goPrevPage}\r\n      >\r\n        Previous\r\n      </button>\r\n      <h3\r\n        style={{\r\n          color: darkMode ? colors.white : colors.black,\r\n        }}\r\n      >\r\n        {pageNumber} of {amountOfPages}\r\n      </h3>\r\n      <button\r\n        style={{\r\n          color: darkMode ? colors.white : colors.black,\r\n        }}\r\n        onClick={goNextPage}\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPaginationControls;\r\n","import { colors } from \"../../colors/colors\";\r\nimport { usePagination } from \"../../customHooks/usePagination\";\r\nimport CountryItem from \"../CountryItem/CountryItem\";\r\nimport CountryPaginationControls from \"../CountryPaginationControls/CountryPaginationControls\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport \"./CountriesList.scss\";\r\n\r\nconst CountriesList = ({ countries, darkMode }) => {\r\n  const { filtered, pageNumber, goNextPage, goPrevPage, amountOfPages } =\r\n    usePagination(countries, 12);\r\n\r\n  return (\r\n    <div className=\"countries\">\r\n      {countries ? (\r\n        <div className=\"countries__list\">\r\n          {filtered?.map((country) => {\r\n            return (\r\n              <CountryItem\r\n                colors={colors}\r\n                key={country.name}\r\n                country={country}\r\n                darkMode={darkMode}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <Loader\r\n          speed=\"1s\"\r\n          color={darkMode ? colors.white : colors.black}\r\n          width=\"20rem\"\r\n          height=\"20rem\"\r\n          size=\"1rem\"\r\n        />\r\n      )}\r\n\r\n      {countries && (\r\n        <CountryPaginationControls\r\n          darkMode={darkMode}\r\n          colors={colors}\r\n          pageNumber={pageNumber}\r\n          amountOfPages={amountOfPages}\r\n          goPrevPage={goPrevPage}\r\n          goNextPage={goNextPage}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountriesList;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const usePagination = (initState = [], maxElements) => {\r\n  const [pageState, setPageState] = useState({\r\n    curIndex: 0,\r\n    nxtIndex: maxElements,\r\n    pageNumber: 1,\r\n  });\r\n  const [filtered, setFiltered] = useState(initState);\r\n\r\n  const { curIndex, nxtIndex, pageNumber } = pageState;\r\n\r\n  const amountOfPages = Math.ceil(initState.length / maxElements);\r\n  const amountOfElements =\r\n    pageNumber * maxElements > initState.length\r\n      ? initState.length\r\n      : pageNumber * maxElements;\r\n\r\n  const resetPagination = () => {\r\n    setPageState({\r\n      curIndex: 0,\r\n      nxtIndex: maxElements,\r\n      pageNumber: 1,\r\n    });\r\n  };\r\n\r\n  const goNextPage = () => {\r\n    if (curIndex + maxElements < initState.length) {\r\n      setPageState({\r\n        curIndex: curIndex + maxElements,\r\n        nxtIndex: nxtIndex + maxElements,\r\n        pageNumber: pageNumber + 1,\r\n      });\r\n      window.scroll(0, 0);\r\n    }\r\n  };\r\n\r\n  const goPrevPage = () => {\r\n    if (curIndex > 0) {\r\n      setPageState({\r\n        curIndex: curIndex - maxElements,\r\n        nxtIndex: nxtIndex - maxElements,\r\n        pageNumber: pageNumber - 1,\r\n      });\r\n      window.scroll(0, 0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filtered = initState.slice(curIndex, nxtIndex);\r\n    setFiltered(filtered);\r\n  }, [initState, pageNumber, curIndex, nxtIndex, maxElements]);\r\n\r\n  return {\r\n    filtered,\r\n    amountOfElements,\r\n    pageNumber,\r\n    goNextPage,\r\n    goPrevPage,\r\n    amountOfPages,\r\n    resetPagination,\r\n  };\r\n};\r\n","export const orderCountriesByName = (countries, target) => {\r\n  return countries.filter((countryElm) =>\r\n    countryElm.name.toLowerCase().includes(target.toLowerCase())\r\n  );\r\n};\r\n\r\nexport const orderCountriesByRegion = (countries, target) => {\r\n  return countries.filter(\r\n    (countryElm) => countryElm.region.toLowerCase() === target.toLowerCase()\r\n  );\r\n};\r\n\r\nexport const orderCountriesByRegionAndName = (\r\n  countries,\r\n  targetRegion,\r\n  targetName\r\n) => {\r\n  const filteredCountries = orderCountriesByRegion(countries, targetRegion);\r\n  return orderCountriesByName(filteredCountries, targetName);\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Homepage.scss\";\r\nimport useForm from \"../../customHooks/useForm\";\r\nimport { getCountries } from \"../../helpers/getCountries\";\r\nimport CountriesList from \"../../components/CountriesList/CountriesList\";\r\nimport {\r\n  orderCountriesByRegion,\r\n  orderCountriesByName,\r\n  orderCountriesByRegionAndName,\r\n} from \"../../helpers/orderFunctions\";\r\nimport { colors } from \"../../colors/colors\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDesctructuredContext } from \"../../customHooks/useDesctructuredContext\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\n\r\nconst Homepage = () => {\r\n  const [allCountries, setAllCountries] = useState();\r\n  const [countries, setCountries] = useState(allCountries);\r\n  const history = useHistory();\r\n  const isMounted = useRef(false);\r\n\r\n  const { country, continents, handleChange } = useForm({\r\n    country: \"\",\r\n    continents: \"\",\r\n  });\r\n\r\n  const { darkMode } = useDesctructuredContext();\r\n\r\n  const filterCountriesByInputs = () => {\r\n    let filteredCountries = [];\r\n    if (continents && country) {\r\n      filteredCountries = orderCountriesByRegionAndName(\r\n        allCountries,\r\n        continents,\r\n        country\r\n      );\r\n    } else if (continents)\r\n      filteredCountries = orderCountriesByRegion(allCountries, continents);\r\n    else if (country)\r\n      filteredCountries = orderCountriesByName(allCountries, country);\r\n    return filteredCountries;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const filteredCountries = filterCountriesByInputs();\r\n    setCountries(\r\n      filteredCountries.length > 0 ? filteredCountries : allCountries\r\n    );\r\n    history.push(`?country=${country}&continents=${continents}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n\r\n    if (isMounted.current) {\r\n      getCountries().then((response) => {\r\n        if (response) {\r\n          setAllCountries(response);\r\n          setCountries(response);\r\n        }\r\n      });\r\n    }\r\n\r\n    return () => (isMounted.current = false);\r\n  }, []);\r\n\r\n  return (\r\n    <section\r\n      style={{\r\n        backgroundColor: darkMode ? colors.veryDarkBlue : colors.veryLightGray,\r\n      }}\r\n      className=\"homepage\"\r\n    >\r\n      <div className=\"homepage__container\">\r\n        <form onSubmit={handleSubmit} action=\"\" className=\"homepage__form\">\r\n          <div\r\n            style={{\r\n              backgroundColor: darkMode ? colors.darkBlue : colors.white,\r\n            }}\r\n            className=\"homepage__input-container\"\r\n          >\r\n            <button\r\n              style={{\r\n                color: darkMode ? colors.white : colors.darkGray,\r\n              }}\r\n              type=\"submit\"\r\n            >\r\n              <FontAwesomeIcon icon={faMagnifyingGlass} />\r\n            </button>\r\n            <input\r\n              style={{\r\n                color: darkMode ? colors.white : colors.darkGray,\r\n              }}\r\n              value={country}\r\n              onChange={handleChange}\r\n              className=\"homepage__input\"\r\n              type=\"text\"\r\n              name=\"country\"\r\n              placeholder=\"Search for a country\"\r\n            />\r\n          </div>\r\n          <select\r\n            style={{\r\n              color: darkMode ? colors.white : colors.darkGray,\r\n              backgroundColor: darkMode ? colors.darkBlue : colors.white,\r\n            }}\r\n            value={continents}\r\n            onChange={handleChange}\r\n            className=\"homepage__select\"\r\n            name=\"continents\"\r\n            id=\"continents\"\r\n          >\r\n            <option value=\"Americas\">Americas</option>\r\n            <option value=\"Europe\">Europe</option>\r\n            <option value=\"Oceania\">Oceania</option>\r\n            <option value=\"Asia\">Asia</option>\r\n            <option value=\"Africa\">Africa</option>\r\n            <option value=\"\">Filter by Region</option>\r\n          </select>\r\n        </form>\r\n\r\n        <CountriesList countries={countries} darkMode={darkMode} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport DetailPage from \"../views/DetailPage/DetailPage\";\r\nimport Homepage from \"../views/Homepage/Homepage\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/country/:countryCode\" component={DetailPage} />\r\n        <Route exact path=\"/\" component={Homepage} />\r\n        <Route path=\"*\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { DarkThemeProvider } from \"./darkThemeContext/DarkThemeProvider\";\nimport AppRouter from \"./router/AppRouter\";\n\nfunction App() {\n  return (\n    <DarkThemeProvider>\n      <AppRouter />\n    </DarkThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}